@use "sass:map";
@use "sass:string";

// ---------- Theme maps ----------

//Light theme
$theme-light: (
  color-bg: #ffffff,
  color-surface: #fdfbff,

  color-border: #d8d3f0,

  color-text: #221f3b,

  color-text-muted: #716c8b,

  color-primary: #7758f3,

  color-secondary: #46b6ff,

  color-accent: #f38fff,

  color-accent-hover: #aae9fc,

  color-gradient: linear-gradient(90deg, #7758f3, #46b6ff),
);

//Dark theme
$theme-dark: (
  color-bg: linear-gradient(180deg, #0a0613 0%, #13162b 100%),
  color-surface: #1b1f3b,

  color-border: #2b2f55,

  color-text: #e9e9ff,

  color-text-muted: #a2a1d0,

  color-primary: #9f8cff,

  color-secondary: #4ddfff,

  color-accent: #ff87d1,

  color-accent-hover: #6a9cff,

  color-gradient: linear-gradient(90deg, #9f8cff, #4ddfff),
);

// ---------- Design tokens ----------
$spacing: 1em;
$radius: 0.75em;
$anime-card-height: 22em;
$anime-image-height: 10em;
$shadow-soft: 0 0.25em 0.5em rgba(0, 0, 0, 0.15);
$shadow-button: 0 0.25em 0.75em rgba(119, 88, 243, 0.4);

// ---------- Helper mixin ----------
@mixin export-theme($map) {
  @each $key, $value in $map {
    $prop-name: str-replace($key, "_", "-");
    --#{$prop-name}: #{$value};
  }
}

// Updated string replace (uses string.* functions)
@function str-replace($string, $search, $replace: "") {
  $index: string.index($string, $search);
  @if $index {
    @return string.slice($string, 1, $index - 1) + $replace +
      str-replace(
        string.slice($string, $index + string.length($search)),
        $search,
        $replace
      );
  }
  @return $string;
}

// ---------- Compile-time fallback vars ----------
$color-primary: map.get($theme-light, color-primary);
$color-secondary: map.get($theme-light, color-secondary);
